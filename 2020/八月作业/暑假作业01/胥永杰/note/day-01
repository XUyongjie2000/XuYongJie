一.英雄登录
1.项目初始化 搭建项目结构
2.配置静态资源
3.创建路由
4.配置ejs模板
5.设计数据库表

6.用户登录
6.1引入插件(bootstrapValidator)
6.2前端表单检验(观察页面是否有from id和name属性 如果没有添加 有的话修改字段表单校验)
6.3发送Ajax请求(校验成功后 发送请求)
6.4路由接口(设置中间件)
6.5后端数据校验(joi)
6.5.1下载指定版本 npm install joi@14.3.1
6.5.2处理登录业务
1.获取前端传来的数据
2.后端数据校验
3.数据库的数据对比

6.6操作数据库
1.安装mysql包
2.引入mysql包 创建数据库连接池
3.通过数据库连接池去查询数据库

6.7返回结果
6.8跳转(判断数据和数据库一致 跳转)
6.9登录保持(cookie和session)express-session
1.安装express-session并引入
2.配置session包(注意:此步代码要在挂载路由之前写 创建服务器之后写)
3.把用户信息写在session里面

6.10登录拦截
1.判断是不是登录页并且是否是session里的用户 如果不是重定向到登录页

二.英雄列表
1.展示所有英雄信息
1.1在模型model里面查询所有英雄信息
1.2在控制器里把所有英雄信息给data
1.3在首页修改模板

三.添加英雄
1.点击新增按钮跳转到添加页面
2.给添加页面的新增按钮绑定点击事件 点击之后获取表单的信息，注意表单的name值或是否有name值
3.post方式发送请求 路由里面添加英雄 控制器里面获取前端传过来的英雄信息
4.再去模型里面添加英雄到数据库
5.添加成功跳转回首页

四.删除英雄
1.给删除按钮绑定点击事件 获取当前信息id 发送请求删除
2.在路由里面添加路由 获取请求地址和方式
3.在控制器里获取前端传过来的数据
4.在模型里面写sql语句删除英雄的
5.在控制器里调用方法删除英雄
6.删除成功重新加载首页

五.模糊查询
1.给查询按钮绑定点击事件 获取form的值
2.发送Ajax请求 请求的数据是form的值
3.在路由里添加路由 获取请求地址和方式
4.在控制里获取前端要查询的数据
5.在模型里写查询的sql语句
6.在控制器中引入model里的方法 查询数据
7.在js里写template模板

六.编辑

